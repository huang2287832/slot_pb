%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 3.27.2

-ifndef(slot_pb).
-define(slot_pb, true).

-define(slot_pb_gpb_version, "3.27.2").

-ifndef('ERRRESP_PB_H').
-define('ERRRESP_PB_H', true).
-record(errResp,
        {cmd                    :: non_neg_integer(), % = 1, 32 bits
         err_code               :: non_neg_integer() | undefined, % = 2, 32 bits
         err_msg                :: binary() | iolist() | undefined % = 3
        }).
-endif.

-ifndef('KICKUSERPUSH_PB_H').
-define('KICKUSERPUSH_PB_H', true).
-record(kickUserPush,
        {code                   :: non_neg_integer() % = 1, 32 bits
        }).
-endif.

-ifndef('BALANCEPUSH_PB_H').
-define('BALANCEPUSH_PB_H', true).
-record(balancePush,
        {balance                :: non_neg_integer() % = 1, 32 bits
        }).
-endif.

-ifndef('GMRESP_PB_H').
-define('GMRESP_PB_H', true).
-record(gmResp,
        {
        }).
-endif.

-ifndef('LOGINRESP_PB_H').
-define('LOGINRESP_PB_H', true).
-record(loginResp,
        {game_id                :: non_neg_integer(), % = 1, 32 bits
         balance                :: non_neg_integer(), % = 2, 32 bits
         type                   :: non_neg_integer(), % = 3, 32 bits
         gm                     :: non_neg_integer() % = 4, 32 bits
        }).
-endif.

-ifndef('BEATHEARTRESP_PB_H').
-define('BEATHEARTRESP_PB_H', true).
-record(beatHeartResp,
        {
        }).
-endif.

-ifndef('GMREQ_PB_H').
-define('GMREQ_PB_H', true).
-record(gmReq,
        {gm_str                 :: binary() | iolist() % = 1
        }).
-endif.

-ifndef('BEATHEARTREQ_PB_H').
-define('BEATHEARTREQ_PB_H', true).
-record(beatHeartReq,
        {
        }).
-endif.

-ifndef('GETBALANCEREQ_PB_H').
-define('GETBALANCEREQ_PB_H', true).
-record(getBalanceReq,
        {
        }).
-endif.

-ifndef('GETBALANCERESP_PB_H').
-define('GETBALANCERESP_PB_H', true).
-record(getBalanceResp,
        {balance                :: non_neg_integer() % = 1, 32 bits
        }).
-endif.

-ifndef('LOGINREQ_PB_H').
-define('LOGINREQ_PB_H', true).
-record(loginReq,
        {token                  :: binary() | iolist(), % = 1
         game_id                :: non_neg_integer() | undefined % = 2, 32 bits
        }).
-endif.

-endif.
